#!/usr/bin/env ruby
#
# @todo - open existing gitignore and check for missing entries
# @todo - add interactive stdin

GITIGNORE_PATH = '.gitignore'
GIT_PATH = '.git'
README = /(readme|README)\.(md|txt|rdoc)/

NODE_PATHS = ['node_modules']
RUBY_PATHS = ['.bundle', 'vendor']

IGNORE = ['.DS_Store', '*.env', 'log', '*.key', '*.pem']

DONT_IGNORE = [".env.example"]

def write_gitignore
  IGNORE.unshift("# Generated by scripts/gsetup")

  IGNORE << NODE_PATHS if File.exist?("package.json")
  IGNORE << RUBY_PATHS if File.exist?("Gemfile")
  IGNORE.concat(DONT_IGNORE.map {|x| "!#{x}"})

  File.open(".gitignore", "w+") {|x| x << IGNORE.join("\n")}
  puts "Wrote new .gitignore"
end

def skip
  puts "Already exists, skipping."
end

entries = Dir.entries(Dir.pwd).reject {|x| x.match(/^(\.|\.\.)$/)}
File.exist?(".gitignore") ? skip : write_gitignore


